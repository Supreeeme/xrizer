[package]
name = "xrizer"
version = "0.2.0"
edition = "2021"
resolver = "2"
rust-version = "1.83"

[lib]
crate-type = ["cdylib", "lib"]

[[bin]]
name = "xrizer_skeletal_input"
path = "src/input/skeletal_input/bin.rs"

[features]
tracing = ["dep:tracy-client", "openvr/tracing"]

[workspace]
members = ["openvr", "shaders", "xbuild"]

[workspace.lints.clippy]
all = "deny"

[workspace.dependencies]
ash = "0.38.0"
openxr = { git = "https://github.com/ralith/openxrs", rev = "d0afdd3", version = "0.19.0", features = ["static"] }
openxr-sys = { git = "https://github.com/ralith/openxrs", rev = "d0afdd3", version = "0.11.0" }
slotmap = "1.0.7"
glam = "0.29.0"
log = "0.4.22"
tracy-client = "0.17.6"

[dependencies]
ash = { workspace = true }
env_logger = "0.11.5"
glam = { workspace = true }
log = { workspace = true }
openxr = { workspace = true }
openvr = { path = "openvr" }
paste = "1.0.15"
seq-macro = "0.3.5"
macros = { path = "macros" }
serde = { version = "1.0.209", features = ["derive"] }
serde_json = "1.0.127"
slotmap = { workspace = true }
time = { version = "0.3.36", features = ["formatting", "local-offset", "macros"] }
tracy-client = { workspace = true, features = ["only-localhost", "demangle"], optional = true }
egui = "0.28.1"
egui-miniquad = "0.15.0"
miniquad = "=0.4.0"
webbrowser = "0.5.5"
glutin_glx_sys = "0.6.0"
libc = "0.2.169"
derive_more = { version = "1.0.0", features = ["deref", "from", "try_into"] }
gl = "0.14.0"
ipc-channel = "0.19.0"
[build-dependencies]
shaders = { path = "shaders" }

[dev-dependencies]
libloading = "0.8.5"
test-cdylib = "1.1.0"
fakexr = { path = "fakexr" }
macros = { path = "macros", features = ["test"]}
