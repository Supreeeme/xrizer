name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - name: Cache glslc
      uses: actions/cache@v3
      id: cache-glslc
      with:
        path: glslc/bin/glslc
    - if: steps.cache-glslc.outputs.cache-hit != 'true'
      name: Checkout glslc
      uses: actions/checkout@v4
      with:
        repository: google/shaderc
        ref: v2024.4
        path: shaderc
    - if: steps.cache-glslc.outputs.cache-hit != 'true'
      name: Build glslc
      run: |
        cd shaderc && mkdir build && cd build
        cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$(realpath ../../bin) -DSHADERC_SKIP_TESTS=ON -DSHADERC_SKIP_EXAMPLES=ON -DSHADERC_SKIP_COPYRIGHT_CHECK=ON -DSHADERC_ENABLE_WERROR_COMPILE=OFF ..
        ninja install
        cd ../..
        echo "$(realpath bin)" >> "$GITHUB_PATH"
    - name: Install miri
      run: rustup toolchain install nightly && rustup +nightly component add miri
    - uses: actions/checkout@v4
    - name: Format
      run: cargo fmt --check
    - name: Build
      run: echo "$PATH" && which glslc && cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Run tests with miri
      run: cargo +nightly miri test
